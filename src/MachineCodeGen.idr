module MachineCodeGen

import AST
import Data.List
import Instruction
import Machine

--Exceptions that can be generated by code generation.
public export
data CodeGenerationException =
    InvalidExpressionException String AST

--Generate Machine Instructions for a given reducible expression
public export total
genReduceExpr : AST -> Either CodeGenerationException (List Instruction)
--A return expression is essentially a NOP, so unfold it.
genReduceExpr (ReturnExpr a) =
    genReduceExpr a
--Unknown mapping from the given AST to a reducible expression
genReduceExpr a =
    Left $ InvalidExpressionException "Expecting reducible expression" a
